{"ast":null,"code":"/* global define:false, self:false */\n'use strict';\n\nconst React = self.React || require('react');\n\nconst PropTypes = require('prop-types'); // Additional props\n\n\nconst MODIFIER_PROPS = ['important', 'disabled']; // Available ZIndex component properties\n\nconst PROP_TYPES = {\n  important: PropTypes.bool,\n  disabled: PropTypes.bool,\n  top: PropTypes.bool,\n  bottom: PropTypes.bool,\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),\n  above: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  below: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n}; // Observed zIndex values, used to discover duplicates\n\nlet indexes = []; // zIndex name=>index map\n// Initialised when vars are declared by consumer\n\nlet zmap = null; // UID\n\nlet id = 0;\n\nfunction ZIndexError(msg) {\n  return new Error('react-z-index: ' + msg);\n}\n\nfunction makeZIndex(propName, value, props) {\n  if ((propName === 'above' || propName === 'below') && typeof value === 'string' && !zmap[value]) {\n    throw ZIndexError(`Unrecognised zIndex name \"${value}\".`);\n  }\n\n  switch (propName) {\n    case 'index':\n      switch (typeof value) {\n        case 'function':\n          const index = value(props);\n\n          if (typeof index !== 'number' && typeof index !== 'string') {\n            throw ZIndexError(`Derived zIndex must be number or string, got \"${typeof index}\".`);\n          }\n\n          return index;\n\n        case 'number':\n          return value;\n\n        case 'string':\n          if (!zmap[value]) {\n            throw ZIndexError(`Unrecognised zIndex name \"${value}\".`);\n          }\n\n          return zmap[value];\n      }\n\n      break;\n\n    case 'above':\n      if (typeof value === 'string') return zmap[value] + 1;else if (typeof value === 'number') return value + 1;\n      throw ZIndexError(`Expecting string or number for \"above\", got ${typeof value}.`);\n\n    case 'below':\n      if (typeof value === 'string') return zmap[value] - 1;else if (typeof value === 'number') return value - 1;\n      throw ZIndexError(`Expecting string or number for \"below\", got ${typeof value}.`);\n\n    case 'top':\n      {\n        const keys = Object.keys(zmap);\n        let max = keys.length ? -Infinity : 0;\n\n        for (let i = 0, len = keys.length; i < len; i++) {\n          if (zmap[keys[i]] > max) max = zmap[keys[i]];\n        }\n\n        return max + 1;\n      }\n\n    case 'bottom':\n      {\n        const keys = Object.keys(zmap);\n        let min = keys.length ? +Infinity : 0;\n\n        for (let i = 0, len = keys.length; i < len; i++) {\n          if (zmap[keys[i]] < min) min = zmap[keys[i]];\n        }\n\n        return min - 1;\n      }\n\n    default:\n      throw ZIndexError(`Could not make zIndex, unexpected arguments: prop=${propName} value=${value}.`);\n  }\n}\n\nfunction generateZMap(array, opts) {\n  let customIndexes = 0;\n  return array.reverse().reduce((zmap, name, i) => {\n    if (typeof name !== 'string' && !Array.isArray(name)) {\n      throw ZIndexError(`Expecting var to be array or string, got \"${typeof name}\".`);\n    }\n\n    if (Array.isArray(name)) {\n      if (typeof name[0] !== 'string') {\n        throw ZIndexError(`Expecting var name to be string, got \"${typeof name[0]}\".`);\n      } else if (typeof name[1] !== 'number') {\n        throw ZIndexError(`Expecting var index to be number, got \"${typeof name[0]}\".`);\n      }\n\n      zmap[name[0]] = name[1];\n      customIndexes += 1;\n    } else {\n      zmap[name] = i === 0 ? opts.start : Math.max(Math.floor(opts.start + opts.step * (i - customIndexes)), opts.start);\n    }\n\n    return zmap;\n  }, {});\n} // ---\n// Component\n// ---\n\n\nclass ZIndex extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    zmap = zmap || {};\n    this._id = id++;\n    this.prop = this.getProp(props);\n    this.disabled = typeof this.props.disabled === 'boolean' ? this.props.disabled : false;\n    this.zIndex = zmap[this._id] = makeZIndex(this.prop, props[this.prop], props);\n  }\n\n  componentWillReceiveProps() {\n    this.prop = this.getProp(this.props);\n    this.disabled = typeof this.props.disabled === 'boolean' ? this.props.disabled : false;\n    this.zIndex = zmap[this._id] = makeZIndex(this.prop, this.props[this.prop], this.props);\n  }\n\n  getProp(props) {\n    const legalProps = Object.keys(PROP_TYPES).filter(n => MODIFIER_PROPS.indexOf(n) === -1);\n    return legalProps.reduce((ret, prop, i) => {\n      if (!ret && typeof props[prop] !== 'undefined') {\n        return prop;\n      } else if (ret && props[prop] || !ret && legalProps.length === i + 1) {\n        throw ZIndexError(`Expecting exactly one prop out of \"${legalProps.join('\", \"')}\".`);\n      } else {\n        return ret;\n      }\n    }, false);\n  }\n\n  render() {\n    const zIndex = this.disabled ? undefined : this.zIndex + (this.props.important ? ' !important' : '');\n    const zIndexProps = {\n      style: Object.assign({\n        zIndex,\n        position: 'relative'\n      }, this.props.style || {})\n    };\n    return React.createElement('div', zIndexProps, this.props.children);\n  }\n\n}\n\nZIndex.propTypes = PROP_TYPES; // ---\n// Decorator\n// ---\n\nZIndex.zIndex = function zIndexDecorator(zIndex) {\n  if (!['function', 'number', 'string'].indexOf(typeof zIndex) === -1) {\n    throw ZIndexError(`Expecting zIndex to be string, number, or function, got \"${typeof zIndex}\".`);\n  }\n\n  return target => props => React.createElement(ZIndex, {\n    index: zIndex\n  }, React.cloneElement(target, props));\n}; // ---\n// Utility\n// ---\n\n\nZIndex.setVars = function setVars(vars, opts) {\n  opts = Object.assign({}, {\n    warnDuplicate: true,\n    start: 10,\n    step: 10\n  }, opts);\n\n  if (zmap) {\n    throw ZIndexError('Called ZIndex.setVars() more than once.');\n  } else if (typeof vars !== 'object' && !Array.isArray(vars)) {\n    throw ZIndexError(`Expecting vars to be object or array, got \"${typeof vars}\".`);\n  } else if (Array.isArray(vars)) {\n    if (opts.start && typeof opts.start !== 'number') {\n      throw ZIndexError(`Expecting start to be number, got \"${typeof opts.start}\".`);\n    } else if (opts.step && typeof opts.step !== 'number') {\n      throw ZIndexError(`Expecting step to be number, got \"${typeof opts.start}\".`);\n    }\n  }\n\n  zmap = Array.isArray(vars) ? generateZMap(vars, opts) : vars;\n\n  if (opts.warnDuplicate) {\n    Object.keys(zmap).forEach(name => {\n      const index = zmap[name];\n\n      if (indexes.indexOf(index) !== -1) {\n        console.warn(`ZIndex: duplicate index ${index} from \"${name}\".`);\n      } else {\n        indexes.push(zmap[name]);\n      }\n    });\n  }\n};\n\nZIndex.setVar = function setVar(name, value) {\n  if (typeof name !== 'string') {\n    throw ZIndexError(`Expecting name to be string, got \"${typeof name}\".`);\n  } else if (typeof value !== 'number') {\n    throw ZIndexError(`Expecting value to be number, got \"${typeof value}\".`);\n  } else if (ZIndex.vars && ZIndex.vars[name]) {\n    throw ZIndexError(`Var with name \"${name}\" already set.`);\n  }\n\n  if (indexes.indexOf(value) !== -1) {\n    console.warn(`ZIndex: duplicate index ${value} from \"${name}\".`);\n  } else {\n    indexes.push(value);\n  }\n\n  zmap = zmap || {};\n  zmap[name] = value;\n  return value;\n};\n\nZIndex.__clear__ = function clear() {\n  indexes = [];\n  zmap = null;\n};\n\nObject.defineProperty(ZIndex, 'vars', {\n  enumerable: true,\n  get: () => zmap\n});\n\nif (typeof define === 'function' && define.amd) {\n  define('ZIndex', function () {\n    return ZIndex;\n  });\n} else if (typeof module === 'object' && module.exports) {\n  module.exports = ZIndex;\n} else {\n  self.ZIndex = ZIndex;\n}","map":{"version":3,"sources":["/home/paulo/Documentos/Projetos/WebDev/banco-trigg/node_modules/react-z-index/index.js"],"names":["React","self","require","PropTypes","MODIFIER_PROPS","PROP_TYPES","important","bool","disabled","top","bottom","index","oneOfType","number","string","func","above","below","indexes","zmap","id","ZIndexError","msg","Error","makeZIndex","propName","value","props","keys","Object","max","length","Infinity","i","len","min","generateZMap","array","opts","customIndexes","reverse","reduce","name","Array","isArray","start","Math","floor","step","ZIndex","Component","constructor","context","_id","prop","getProp","zIndex","componentWillReceiveProps","legalProps","filter","n","indexOf","ret","join","render","undefined","zIndexProps","style","assign","position","createElement","children","propTypes","zIndexDecorator","target","cloneElement","setVars","vars","warnDuplicate","forEach","console","warn","push","setVar","__clear__","clear","defineProperty","enumerable","get","define","amd","module","exports"],"mappings":"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","sourcesContent":["/* global define:false, self:false */\n'use strict'\n\nconst React = self.React || require('react')\nconst PropTypes = require('prop-types')\n\n// Additional props\nconst MODIFIER_PROPS = [\n  'important',\n  'disabled'\n]\n\n// Available ZIndex component properties\nconst PROP_TYPES = {\n  important: PropTypes.bool,\n  disabled: PropTypes.bool,\n  top: PropTypes.bool,\n  bottom: PropTypes.bool,\n  index: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.func\n  ]),\n  above: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  below: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ])\n}\n\n// Observed zIndex values, used to discover duplicates\nlet indexes = []\n\n// zIndex name=>index map\n// Initialised when vars are declared by consumer\nlet zmap = null\n\n// UID\nlet id = 0\n\nfunction ZIndexError (msg) {\n  return new Error('react-z-index: ' + msg)\n}\n\nfunction makeZIndex (propName, value, props) {\n  if (\n    (propName === 'above' || propName === 'below') &&\n    (typeof value === 'string' && !zmap[value])\n  ) {\n    throw ZIndexError(`Unrecognised zIndex name \"${value}\".`)\n  }\n\n  switch (propName) {\n    case 'index':\n      switch (typeof value) {\n        case 'function':\n          const index = value(props)\n          if (typeof index !== 'number' && typeof index !== 'string') {\n            throw ZIndexError(`Derived zIndex must be number or string, got \"${typeof index}\".`)\n          }\n          return index\n\n        case 'number':\n          return value\n\n        case 'string':\n          if (!zmap[value]) {\n            throw ZIndexError(`Unrecognised zIndex name \"${value}\".`)\n          }\n          return zmap[value]\n      }\n      break\n\n    case 'above':\n      if (typeof value === 'string') return zmap[value] + 1\n      else if (typeof value === 'number') return value + 1\n      throw ZIndexError(`Expecting string or number for \"above\", got ${typeof value}.`)\n\n    case 'below':\n      if (typeof value === 'string') return zmap[value] - 1\n      else if (typeof value === 'number') return value - 1\n      throw ZIndexError(`Expecting string or number for \"below\", got ${typeof value}.`)\n\n    case 'top': {\n      const keys = Object.keys(zmap)\n      let max = keys.length ? -Infinity : 0\n      for (let i = 0, len = keys.length; i < len; i++) {\n        if (zmap[keys[i]] > max) max = zmap[keys[i]]\n      }\n      return max + 1\n    }\n\n    case 'bottom': {\n      const keys = Object.keys(zmap)\n      let min = keys.length ? +Infinity : 0\n      for (let i = 0, len = keys.length; i < len; i++) {\n        if (zmap[keys[i]] < min) min = zmap[keys[i]]\n      }\n      return min - 1\n    }\n\n    default:\n      throw ZIndexError(`Could not make zIndex, unexpected arguments: prop=${propName} value=${value}.`)\n  }\n}\n\nfunction generateZMap (array, opts) {\n  let customIndexes = 0\n\n  return array.reverse().reduce((zmap, name, i) => {\n    if (typeof name !== 'string' && !Array.isArray(name)) {\n      throw ZIndexError(`Expecting var to be array or string, got \"${typeof name}\".`)\n    }\n\n    if (Array.isArray(name)) {\n      if (typeof name[0] !== 'string') {\n        throw ZIndexError(`Expecting var name to be string, got \"${typeof name[0]}\".`)\n      } else if (typeof name[1] !== 'number') {\n        throw ZIndexError(`Expecting var index to be number, got \"${typeof name[0]}\".`)\n      }\n\n      zmap[name[0]] = name[1]\n\n      customIndexes += 1\n    } else {\n      zmap[name] = i === 0 ? opts.start : Math.max(\n        Math.floor(opts.start + (opts.step * (i - customIndexes))),\n        opts.start\n      )\n    }\n\n    return zmap\n  }, {})\n}\n\n// ---\n// Component\n// ---\n\nclass ZIndex extends React.Component {\n  constructor (props, context) {\n    super(props, context)\n\n    zmap = zmap || {}\n\n    this._id = id++\n    this.prop = this.getProp(props)\n    this.disabled = typeof this.props.disabled === 'boolean' ? this.props.disabled : false\n    this.zIndex = zmap[this._id] = makeZIndex(this.prop, props[this.prop], props)\n  }\n\n  componentWillReceiveProps () {\n    this.prop = this.getProp(this.props)\n    this.disabled = typeof this.props.disabled === 'boolean' ? this.props.disabled : false\n    this.zIndex = zmap[this._id] = makeZIndex(this.prop, this.props[this.prop], this.props)\n  }\n\n  getProp (props) {\n    const legalProps = Object\n      .keys(PROP_TYPES)\n      .filter((n) => MODIFIER_PROPS.indexOf(n) === -1)\n\n    return legalProps.reduce((ret, prop, i) => {\n      if (!ret && typeof props[prop] !== 'undefined') {\n        return prop\n      } else if ((ret && props[prop]) || (!ret && legalProps.length === i + 1)) {\n        throw ZIndexError(`Expecting exactly one prop out of \"${legalProps.join('\", \"')}\".`)\n      } else {\n        return ret\n      }\n    }, false)\n  }\n\n  render () {\n    const zIndex = this.disabled ? undefined : this.zIndex + (this.props.important ? ' !important' : '')\n    const zIndexProps = { style: Object.assign({ zIndex, position: 'relative' }, this.props.style || {}) }\n    return React.createElement('div', zIndexProps, this.props.children)\n  }\n}\n\nZIndex.propTypes = PROP_TYPES\n\n// ---\n// Decorator\n// ---\n\nZIndex.zIndex = function zIndexDecorator (zIndex) {\n  if (!['function', 'number', 'string'].indexOf(typeof zIndex) === -1) {\n    throw ZIndexError(`Expecting zIndex to be string, number, or function, got \"${typeof zIndex}\".`)\n  }\n\n  return (target) => (props) => React.createElement(\n    ZIndex,\n    { index: zIndex },\n    React.cloneElement(target, props)\n  )\n}\n\n// ---\n// Utility\n// ---\n\nZIndex.setVars = function setVars (vars, opts) {\n  opts = Object.assign({}, {\n    warnDuplicate: true,\n    start: 10,\n    step: 10\n  }, opts)\n\n  if (zmap) {\n    throw ZIndexError('Called ZIndex.setVars() more than once.')\n  } else if (typeof vars !== 'object' && !Array.isArray(vars)) {\n    throw ZIndexError(`Expecting vars to be object or array, got \"${typeof vars}\".`)\n  } else if (Array.isArray(vars)) {\n    if (opts.start && typeof opts.start !== 'number') {\n      throw ZIndexError(`Expecting start to be number, got \"${typeof opts.start}\".`)\n    } else if (opts.step && typeof opts.step !== 'number') {\n      throw ZIndexError(`Expecting step to be number, got \"${typeof opts.start}\".`)\n    }\n  }\n\n  zmap = Array.isArray(vars)\n    ? generateZMap(vars, opts)\n    : vars\n\n  if (opts.warnDuplicate) {\n    Object.keys(zmap).forEach((name) => {\n      const index = zmap[name]\n\n      if (indexes.indexOf(index) !== -1) {\n        console.warn(`ZIndex: duplicate index ${index} from \"${name}\".`)\n      } else {\n        indexes.push(zmap[name])\n      }\n    })\n  }\n}\n\nZIndex.setVar = function setVar (name, value) {\n  if (typeof name !== 'string') {\n    throw ZIndexError(`Expecting name to be string, got \"${typeof name}\".`)\n  } else if (typeof value !== 'number') {\n    throw ZIndexError(`Expecting value to be number, got \"${typeof value}\".`)\n  } else if (ZIndex.vars && ZIndex.vars[name]) {\n    throw ZIndexError(`Var with name \"${name}\" already set.`)\n  }\n\n  if (indexes.indexOf(value) !== -1) {\n    console.warn(`ZIndex: duplicate index ${value} from \"${name}\".`)\n  } else {\n    indexes.push(value)\n  }\n\n  zmap = zmap || {}\n\n  zmap[name] = value\n\n  return value\n}\n\nZIndex.__clear__ = function clear () {\n  indexes = []\n  zmap = null\n}\n\nObject.defineProperty(ZIndex, 'vars', {\n  enumerable: true,\n  get: () => zmap\n})\n\nif (typeof define === 'function' && define.amd) {\n  define('ZIndex', function () { return ZIndex })\n} else if (typeof module === 'object' && module.exports) {\n  module.exports = ZIndex\n} else {\n  self.ZIndex = ZIndex\n}\n"]},"metadata":{},"sourceType":"script"}